% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odds.ratio.gam.R
\name{calc.oddsratio.gam}
\alias{calc.oddsratio.gam}
\title{Calculate odds ratio of GAM(M)}
\usage{
calc.oddsratio.gam <- function(data, model, pred, values, percentage, 
slice = FALSE, quietly = FALSE)
}
\arguments{
\item{data}{The data used for model fitting}

\item{model}{A fitted GAM(M)}

\item{pred}{Character of length one. The name of the predictor to calculate the odds ratio for}

\item{values}{Numeric vector of length two.
Predictor values to estimate odds ratio from. Function is coded to use the first 
number given as the "lower" one, i.e. calculating the odds ratio 'from value1 to value2'. 
Only used if 'slice = FALSE'}

\item{percentage}{Numeric of length one. Percentage number to split the predictor distribution into. 
A value of 10 would split the predictor distribution by 10\% intervals. Only needed if 'slice = TRUE'.}

\item{slice}{Logical. Default = FALSE. Whether to calculate odds ratio for fixed increment steps over the whole predictor distribution. 
See `steps` for setting the increment values.}

\item{quietly}{Logical. Default = FALSE. Whether to output information to the console.}
}
\description{
Function to calculate odds ratio for specific increment steps of GAM. 
Odds ratios can also be calculated for continuous percentage increment steps across the whole predictor distribution using 'slice = TRUE'
}
\details{
Currently supported functions: 'mgcv::gam'
}
\examples{
# load data (Source: package 'mgcv')
library(mgcv)
n <- 200
sig <- 2
dat <- gamSim(1, n = n,scale = sig)
dat$x4 <- as.factor(c(rep("A", 50), rep("B", 50), rep("C", 50), rep("D", 50)))
fit.gam <- mgcv::gam(y ~ s(x0) + s(I(x1^2)) + s(x2) + offset(x3) + x4, data = dat) # fit model

# Calculate OR for specific increment step of continuous variable
calc.oddsratio.gam(model = fit.gam, data = dat, pred = "x2", values = c(0.099, 0.198))

## Calculate OR for change of indicator variable
calc.oddsratio.gam(model = fit.gam, data = dat, pred = "x4", values = c("B", "D"))

## Calculate ORs for percentage increments of predictor distribution (here: 20\%)
calc.oddsratio.gam(fit.gam, pred = "x2", percentage = 20, slice = TRUE, data = dat, quietly = F)

}

